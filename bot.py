import os
import re
from dotenv import load_dotenv
from telegram import Update, ChatMember
from telegram.ext import Application, CommandHandler, MessageHandler, filters, ContextTypes

# ‡πÇ‡∏´‡∏•‡∏î environment variables
load_dotenv()
BOT_TOKEN = os.getenv('BOT_TOKEN')

# Pattern ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ï‡∏£‡∏ß‡∏à‡∏à‡∏±‡∏ö‡∏•‡∏¥‡∏á‡∏Å‡πå
LINK_PATTERN = re.compile(
    r'http[s]?://(?:[a-zA-Z]|[0-9]|[$-_@.&+]|[!*\\(\\),]|(?:%[0-9a-fA-F][0-9a-fA-F]))+'
    r'|www\.[a-zA-Z0-9.-]+'
    r'|t\.me/[a-zA-Z0-9_]+'
    r'|tg://[^\s]+'
    r'|@[a-zA-Z0-9_]{5,}'
    r'|[a-zA-Z0-9-]+\.(com|net|org|io|me|co|xyz|info|biz|link|click|site|online|top|pro|vip)'
    r'|[a-zA-Z0-9]+\s*\.\s*[a-zA-Z]{2,}'
)

# ‡πÄ‡∏Å‡πá‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Å‡∏≤‡∏£‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡∏Ç‡∏≠‡∏á‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ {chat_id: {user_id: warning_count}}
user_warnings = {}

async def is_user_admin(update: Update, context: ContextTypes.DEFAULT_TYPE, user_id: int) -> bool:
    """‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡πÄ‡∏õ‡πá‡∏ô Admin ‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà"""
    try:
        chat_id = update.message.chat_id
        member = await context.bot.get_chat_member(chat_id, user_id)
        return member.status in [ChatMember.ADMINISTRATOR, ChatMember.OWNER]
    except Exception as e:
        print(f"‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö admin: {e}")
        return False

async def start_command(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á /start"""
    await update.message.reply_text(
        "ü§ñ ‡∏™‡∏ß‡∏±‡∏™‡∏î‡∏µ‡∏Ñ‡∏£‡∏±‡∏ö! ‡∏ú‡∏°‡πÄ‡∏õ‡πá‡∏ô‡∏ö‡∏≠‡∏ó Antilink\n\n"
        "‡∏ú‡∏°‡∏à‡∏∞‡∏ä‡πà‡∏ß‡∏¢‡∏•‡∏ö‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏•‡∏¥‡∏á‡∏Å‡πå‡πÉ‡∏ô‡∏Å‡∏•‡∏∏‡πà‡∏°‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥\n\n"
        "üìå ‡∏ß‡∏¥‡∏ò‡∏µ‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô:\n"
        "1. ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏ö‡∏≠‡∏ó‡πÄ‡∏Ç‡πâ‡∏≤‡∏Å‡∏•‡∏∏‡πà‡∏°\n"
        "2. ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡πÉ‡∏´‡πâ‡∏ö‡∏≠‡∏ó‡πÄ‡∏õ‡πá‡∏ô Admin\n"
        "3. ‡πÄ‡∏õ‡∏¥‡∏î‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå 'Delete Messages' ‡πÅ‡∏•‡∏∞ 'Ban Users'\n"
        "4. ‡πÄ‡∏™‡∏£‡πá‡∏à‡πÅ‡∏•‡πâ‡∏ß! ‡∏ö‡∏≠‡∏ó‡∏à‡∏∞‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥\n\n"
        "‚ö†Ô∏è ‡∏Å‡∏é‡∏Å‡∏≤‡∏£‡∏•‡∏á‡πÇ‡∏ó‡∏©:\n"
        "‚Ä¢ ‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡∏ó‡∏µ‡πà 1: ‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô\n"
        "‚Ä¢ ‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡∏ó‡∏µ‡πà 2: ‡πÅ‡∏ö‡∏ô‡∏≠‡∏≠‡∏Å‡∏à‡∏≤‡∏Å‡∏Å‡∏•‡∏∏‡πà‡∏°\n"
        "‚Ä¢ Admin ‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏•‡∏á‡πÇ‡∏ó‡∏©"
    )

async def check_message(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ß‡πà‡∏≤‡∏°‡∏µ‡∏•‡∏¥‡∏á‡∏Å‡πå‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà"""
    if update.message:
        message = update.message
        user = message.from_user
        chat_id = message.chat_id
        user_id = user.id

        # ‡∏£‡∏ß‡∏ö‡∏£‡∏ß‡∏°‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö
        text_to_check = []

        # ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ò‡∏£‡∏£‡∏°‡∏î‡∏≤
        if message.text:
            text_to_check.append(message.text)

        # ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö caption ‡∏Ç‡∏≠‡∏á‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û/‡∏ß‡∏¥‡∏î‡∏µ‡πÇ‡∏≠/‡πÄ‡∏≠‡∏Å‡∏™‡∏≤‡∏£
        if message.caption:
            text_to_check.append(message.caption)

        # ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö inline buttons
        if message.reply_markup and message.reply_markup.inline_keyboard:
            for row in message.reply_markup.inline_keyboard:
                for button in row:
                    if button.url:
                        text_to_check.append(button.url)

        # ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö URL entities (‡∏•‡∏¥‡∏á‡∏Å‡πå‡∏ó‡∏µ‡πà‡∏ã‡πà‡∏≠‡∏ô‡∏≠‡∏¢‡∏π‡πà‡πÉ‡∏ô text)
        if message.entities:
            for entity in message.entities:
                if entity.type in ['url', 'text_link']:
                    if entity.type == 'text_link' and entity.url:
                        text_to_check.append(entity.url)

        # ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö caption entities
        if message.caption_entities:
            for entity in message.caption_entities:
                if entity.type in ['url', 'text_link']:
                    if entity.type == 'text_link' and entity.url:
                        text_to_check.append(entity.url)

        # ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏°‡∏µ‡∏•‡∏¥‡∏á‡∏Å‡πå‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
        has_link = any(LINK_PATTERN.search(text) for text in text_to_check if text)

        # ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö forward message ‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏•‡∏¥‡∏á‡∏Å‡πå‡πÄ‡∏ó‡πà‡∏≤‡∏ô‡∏±‡πâ‡∏ô
        is_forwarded = message.forward_date is not None or message.forward_from is not None or message.forward_from_chat is not None
        is_forwarded_with_link = is_forwarded and has_link

        if has_link:
            # ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡πÄ‡∏õ‡πá‡∏ô Admin ‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
            if await is_user_admin(update, context, user_id):
                print(f"Admin {user.first_name} ‡∏™‡πà‡∏á‡∏•‡∏¥‡∏á‡∏Å‡πå/forward - ‡πÑ‡∏°‡πà‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏Å‡∏≤‡∏£")
                return

            try:
                # ‡∏•‡∏ö‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏•‡∏¥‡∏á‡∏Å‡πå
                await message.delete()

                # ‡πÄ‡∏ï‡∏£‡∏µ‡∏¢‡∏°‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ
                username = f"@{user.username}" if user.username else user.first_name

                # ‡∏™‡∏£‡πâ‡∏≤‡∏á dictionary ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÄ‡∏Å‡πá‡∏ö warning ‡∏Ç‡∏≠‡∏á‡∏Å‡∏•‡∏∏‡πà‡∏°‡∏ô‡∏µ‡πâ‡∏ñ‡πâ‡∏≤‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏°‡∏µ
                if chat_id not in user_warnings:
                    user_warnings[chat_id] = {}

                # ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏Å‡∏≤‡∏£‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô
                if user_id not in user_warnings[chat_id]:
                    user_warnings[chat_id][user_id] = 0

                user_warnings[chat_id][user_id] += 1
                warning_count = user_warnings[chat_id][user_id]

                # ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏Å‡∏≤‡∏£‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô
                if warning_count == 1:
                    # ‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡πÅ‡∏£‡∏Å: ‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô
                    warning_reason = "‡∏™‡πà‡∏á‡∏•‡∏¥‡∏á‡∏Å‡πå/forward message" if is_forwarded_with_link else "‡∏™‡πà‡∏á‡∏•‡∏¥‡∏á‡∏Å‡πå"
                    await context.bot.send_message(
                        chat_id=chat_id,
                        text=f"‚ö†Ô∏è {username} ‡∏´‡πâ‡∏≤‡∏°{warning_reason}‡πÉ‡∏ô‡∏Å‡∏•‡∏∏‡πà‡∏°‡∏ô‡∏µ‡πâ!\n\n"
                             f"üî¥ ‡∏ô‡∏µ‡πà‡∏Ñ‡∏∑‡∏≠‡∏Å‡∏≤‡∏£‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡πÅ‡∏£‡∏Å ‡∏´‡∏≤‡∏Å‡∏ù‡πà‡∏≤‡∏ù‡∏∑‡∏ô‡∏≠‡∏µ‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡∏à‡∏∞‡∏ñ‡∏π‡∏Å‡πÅ‡∏ö‡∏ô‡∏ó‡∏±‡∏ô‡∏ó‡∏µ!"
                    )
                    print(f"‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ {username} ‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡∏ó‡∏µ‡πà 1 ({warning_reason})")

                elif warning_count >= 2:
                    # ‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡∏ó‡∏µ‡πà‡∏™‡∏≠‡∏á: ‡πÅ‡∏ö‡∏ô
                    await context.bot.ban_chat_member(chat_id=chat_id, user_id=user_id)
                    await context.bot.send_message(
                        chat_id=chat_id,
                        text=f"üî® {username} ‡∏ñ‡∏π‡∏Å‡πÅ‡∏ö‡∏ô‡∏≠‡∏≠‡∏Å‡∏à‡∏≤‡∏Å‡∏Å‡∏•‡∏∏‡πà‡∏°‡πÄ‡∏ô‡∏∑‡πà‡∏≠‡∏á‡∏à‡∏≤‡∏Å‡∏™‡πà‡∏á‡∏•‡∏¥‡∏á‡∏Å‡πå‡∏ã‡πâ‡∏≥!"
                    )
                    print(f"‡πÅ‡∏ö‡∏ô‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ {username} (‡∏™‡πà‡∏á‡∏•‡∏¥‡∏á‡∏Å‡πå {warning_count} ‡∏Ñ‡∏£‡∏±‡πâ‡∏á)")

                    # ‡∏•‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Å‡∏≤‡∏£‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡∏≠‡∏≠‡∏Å
                    del user_warnings[chat_id][user_id]

            except Exception as e:
                print(f"‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î: {e}")
                # ‡∏ñ‡πâ‡∏≤‡∏ö‡∏≠‡∏ó‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå
                if "not enough rights" in str(e).lower():
                    await message.reply_text(
                        "‚ùå ‡∏ö‡∏≠‡∏ó‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå‡πÄ‡∏û‡∏µ‡∏¢‡∏á‡∏û‡∏≠\n"
                        "‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡πÉ‡∏´‡πâ‡∏ö‡∏≠‡∏ó‡πÄ‡∏õ‡πá‡∏ô Admin ‡πÅ‡∏•‡∏∞‡πÄ‡∏õ‡∏¥‡∏î‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå:\n"
                        "‚Ä¢ Delete Messages\n"
                        "‚Ä¢ Ban Users"
                    )

def main():
    """‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏´‡∏•‡∏±‡∏Å‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏£‡∏±‡∏ô‡∏ö‡∏≠‡∏ó"""
    print("ü§ñ ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ö‡∏≠‡∏ó Antilink...")

    # ‡∏™‡∏£‡πâ‡∏≤‡∏á Application
    application = Application.builder().token(BOT_TOKEN).build()

    # ‡πÄ‡∏û‡∏¥‡πà‡∏° Command Handlers
    application.add_handler(CommandHandler("start", start_command))

    # ‡πÄ‡∏û‡∏¥‡πà‡∏° Message Handler ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î (‡∏£‡∏ß‡∏°‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û/‡∏ß‡∏¥‡∏î‡∏µ‡πÇ‡∏≠/‡πÄ‡∏≠‡∏Å‡∏™‡∏≤‡∏£)
    application.add_handler(MessageHandler(
        (filters.TEXT | filters.PHOTO | filters.VIDEO | filters.Document.ALL | filters.ANIMATION) & ~filters.COMMAND,
        check_message
    ))

    # ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏£‡∏±‡∏ô‡∏ö‡∏≠‡∏ó
    print("‚úÖ ‡∏ö‡∏≠‡∏ó‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡πÅ‡∏•‡πâ‡∏ß!")
    application.run_polling(allowed_updates=Update.ALL_TYPES)

if __name__ == '__main__':
    main()
